from django import forms
from django.core.exceptions import ValidationError
from .models import Product

# üîí –°–ø–∏—Å–æ–∫ –∑–∞–ø—Ä–µ—â—ë–Ω–Ω—ã—Ö —Å–ª–æ–≤ (–ø–µ—Ä–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–π)
FORBIDDEN_WORDS = [
    '–∫–∞–∑–∏–Ω–æ', '–∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–∞', '–∫—Ä–∏–ø—Ç–∞', '–±–∏—Ä–∂–∞',
    '–¥–µ—à–µ–≤–æ', '–±–µ—Å–ø–ª–∞—Ç–Ω–æ', '–æ–±–º–∞–Ω', '–ø–æ–ª–∏—Ü–∏—è', '—Ä–∞–¥–∞—Ä'
]

class ProductForm(forms.ModelForm):
    class Meta:
        model = Product
        fields = ['name', 'description', 'image', 'category', 'price']
        widgets = {
            'description': forms.Textarea(attrs={'rows': 3}),
        }

    # üé® –°—Ç–∏–ª–∏–∑–∞—Ü–∏—è —Ñ–æ—Ä–º—ã
    def __init__(self, *args, **kwargs):
        super().__init__(*args, **kwargs)
        for field in self.visible_fields():
            field.field.widget.attrs['class'] = 'form-control'
        self.fields['image'].widget.attrs['class'] = 'form-control-file'

    # üßº –í–∞–ª–∏–¥–∞—Ü–∏—è: –∑–∞–ø—Ä–µ—Ç —Å–ª–æ–≤ –≤ –Ω–∞–∑–≤–∞–Ω–∏–∏
    def clean_name(self):
        name = self.cleaned_data['name']
        for word in FORBIDDEN_WORDS:
            if word.lower() in name.lower():
                raise ValidationError(f"–ù–∞–∑–≤–∞–Ω–∏–µ —Å–æ–¥–µ—Ä–∂–∏—Ç –∑–∞–ø—Ä–µ—â—ë–Ω–Ω–æ–µ —Å–ª–æ–≤–æ: ¬´{word}¬ª")
        return name

    # üßº –í–∞–ª–∏–¥–∞—Ü–∏—è: –∑–∞–ø—Ä–µ—Ç —Å–ª–æ–≤ –≤ –æ–ø–∏—Å–∞–Ω–∏–∏
    def clean_description(self):
        description = self.cleaned_data['description']
        for word in FORBIDDEN_WORDS:
            if word.lower() in description.lower():
                raise ValidationError(f"–û–ø–∏—Å–∞–Ω–∏–µ —Å–æ–¥–µ—Ä–∂–∏—Ç –∑–∞–ø—Ä–µ—â—ë–Ω–Ω–æ–µ —Å–ª–æ–≤–æ: ¬´{word}¬ª")
        return description

    # üí∞ –í–∞–ª–∏–¥–∞—Ü–∏—è: —Ü–µ–Ω–∞ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–æ–π
    def clean_price(self):
        price = self.cleaned_data['price']
        if price < 0:
            raise ValidationError("–¶–µ–Ω–∞ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–æ–π.")
        return price

    # üñºÔ∏è –í–∞–ª–∏–¥–∞—Ü–∏—è: –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ ‚Äî —Ç–æ–ª—å–∫–æ JPG/PNG –∏ ‚â§ 5MB
    def clean_image(self):
        image = self.cleaned_data.get('image')
        if image:
            if image.size > 5 * 1024 * 1024:
                raise ValidationError("–†–∞–∑–º–µ—Ä –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –Ω–µ –¥–æ–ª–∂–µ–Ω –ø—Ä–µ–≤—ã—à–∞—Ç—å 5 –ú–ë.")
            if not image.content_type in ['image/jpeg', 'image/png']:
                raise ValidationError("–î–æ–ø—É—Å—Ç–∏–º—ã —Ç–æ–ª—å–∫–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è JPEG –∏–ª–∏ PNG.")
        return image
